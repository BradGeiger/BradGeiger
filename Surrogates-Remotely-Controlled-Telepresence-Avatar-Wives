import time
import random

class TelepresenceConduit:
    def __init__(self, avatar_id, anchor_id):
        self.avatar_id = avatar_id
        self.anchor_id = anchor_id
        self.connected = False
        self.focus_level = 0
        self.integrity_score = 100  # starts pristine

    def initiate_connection(self):
        print(f"[🔗] Initializing secure uplink between {self.avatar_id} and {self.anchor_id}...")
        self.connected = True
        time.sleep(1)
        print("[✅] Telepresence conduit established.")

    def simulate_focus_input(self):
        self.focus_level = random.randint(0, 100)
        print(f"[📡] Cognitive input detected: {self.focus_level}% focus")

    def assess_integrity(self):
        # Artificial signal degradation simulation
        decay = random.randint(5, 30)
        self.integrity_score -= decay
        print(f"[⚠️] Integrity score dropped by {decay} → Current: {self.integrity_score}")

    def ritual_disconnect(self, reason):
        print(f"[✂️] Initiating disconnect sequence due to {reason}...")
        self.connected = False
        print(f"[🛡️] {self.avatar_id} has safely withdrawn from conduit.")

    def monitor(self):
        while self.connected:
            time.sleep(2)
            self.simulate_focus_input()
            self.assess_integrity()
            if self.focus_level > 85:
                self.ritual_disconnect("focus surge indicating compromised signal")
            elif self.integrity_score < 40:
                self.ritual_disconnect("signal deterioration from potential attack")

# Example invocation
if __name__ == "__main__":
    conduit = TelepresenceConduit("Diana.Avatara", "PrinceWilliam.EarthAnchor")
    conduit.initiate_connection()
    conduit.monitor()
